<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name/>
        <active>true</active>
        <client>false</client>
        <comments/>
        <condition>current.state=='in_progress'&amp;&amp;(current.administrator==gs.getUserID()||gs.hasRole('x_inthe_eval.admin'))</condition>
        <form_action>true</form_action>
        <form_button>true</form_button>
        <form_context_menu>false</form_context_menu>
        <form_link>false</form_link>
        <hint/>
        <list_action>false</list_action>
        <list_banner_button>false</list_banner_button>
        <list_button>false</list_button>
        <list_choice>false</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>false</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <name>Finalize Evaluation</name>
        <onclick>finalize()</onclick>
        <order>100</order>
        <script><![CDATA[//Perform checks on children and update states lines 1-50
//Combine evaluators on lines 51+

var ucStateArray = [];

//Check that at least 1 use case exists
var grUC = new GlideRecord('x_inthe_eval_use_case');
grUC.addQuery('evaluation',current.sys_id);
grUC.query();
var ucCount = grUC.getRowCount();

var grCriterion = new GlideRecord('x_inthe_eval_criterion');
grCriterion.addQuery('evaluation',current.sys_id);
grCriterion.query();
var CriterionCount = grCriterion.getRowCount();

//gs.addInfoMessage("Use Case Count is: "+ucCount);
if(ucCount > 0 && CriterionCount >0){
	//gs.addInfoMessage("You can continue.");
	while (grUC.next()) { 
		ucStateArray.push(grUC.state+'');
	}
	var ucNotFinal = false;
	for(u=0;u<ucStateArray;u++){
		if(ucStateArray[u]!='final'){
			ucNotFinal = true;
		}
	}
	if(ucNotFinal == true){
		gs.addErrorMessage("Use Cases have not been marked as Final. Please review and finalize each Use Case and Criteria before finalizing the Evaluation.");
		action.setRedirectURL('x_inthe_eval_evaluation.do?sys_id='+current.sys_id);
	}
	else if (ucNotFinal == false){

		//Check for child solutions
		var grSol = new GlideRecord('x_inthe_eval_solution');
		grSol.addQuery('evaluation', current.sys_id);
		grSol.query();
		var solCount = grSol.getRowCount();
		if (solCount > 0){
			grSol.setValue('state', 'final');
			grSol.updateMultiple();
			gs.addInfoMessage("Criteria, Use Cases, and Solutions are finalized and ready for Generating Score Cards.");
			
			// Lookup, deduplicate, and post combined evaluators onto the record
			// combine and deduplicate evaluators and push to combined evaluators list
			var allEvaluators = [];
			var addEvaluators = [];
			var UCLeaders = [];
			var UCEval = [];
			var solPC = [];

			//add users from current record
			if(current.administrator != ''){
				allEvaluators.push(current.administrator.sys_id);
			}
			if(current.architect != '' && current.architect != current.administrator){
				allEvaluators.push(current.architect.sys_id);
			}
			if(current.solutions_manager != ''&& current.solutions_manager != current.administrator&& current.solutions_manager != current.architect){
				allEvaluators.push(current.solutions_manager);
			}
			if(current.additional_evaluators != ''){
				var duplicate = '';
				addEvaluators = current.additional_evaluators.split(",");
				//gs.addInfoMessage("First current add'l evaluator is: "+ addEvaluators[0]);
				for(a=0;a<addEvaluators.length;a++){
					for(i=0;i<allEvaluators.length;i++){
						if(addEvaluators[a]==allEvaluators[i]){
							duplicate = true;
						}
					}
					if(duplicate != true){
						allEvaluators.push(addEvaluators[a]+'');
					}
				}
			}
			//gs.addInfoMessage("Unique users from current record are: "+allEvaluators.toString());

			//lookup use case users, check for duplicates, add to array
			var grUC = new GlideRecord('x_inthe_eval_use_case');
			grUC.addQuery('evaluation',current.sys_id);
			grUC.query();
			if(grUC.getRowCount()==0){
				gs.addErrorMessage("No use cases found. Please create a use case before continuing.");
				action.setRedirectURL('x_inthe_eval_evaluation.do?sys_id='+current.sys_id);
			}
			else if(grUC.getRowCount()>0){
				//gs.addInfoMessage("Use case is found. Calculating users.");
				while(grUC.next()){
					if(grUC.use_case_leader != ''){
						//gs.addInfoMessage("UC leader is: "+grUC.use_case_leader);
						UCLeaders.push(grUC.use_case_leader+'');
					}
					if(grUC.evaluators != ''){
						//gs.addInfoMessage("UC evals are: "+grUC.evaluators);
						var useCaseEvals = [];
						useCaseEvals = grUC.evaluators.split(",");
						for(k=0;k<useCaseEvals.length;k++){
							UCEval.push(useCaseEvals[k]);
						}
					}
				}
				//gs.addInfoMessage("Use Case Leaders are: "+UCLeaders.length);
				//gs.addInfoMessage("Use Case Evaluators are: "+UCEval.length);
				for(b=0;b<UCLeaders.length;b++){
					var duplicate = '';
					for(i=0;i<allEvaluators.length;i++){
						if(UCLeaders[b] == allEvaluators[i]){
							duplicate = true;
						}
					}
					//gs.addInfoMessage("Duplicate is: "+duplicate);
					if(duplicate != true){
						allEvaluators.push(UCLeaders[b]);
					}
				}
				if(UCEval.length>0){
					//gs.addInfoMessage("Use Case evaluators not blank.");
					for(c=0;c<UCEval.length;c++){
						var duplicate = '';
						for(i=0;i<allEvaluators.length;i++){
							//gs.addInfoMessage(UCEval[c]+" compared to "+allEvaluators[i]);
							if(UCEval[c] == allEvaluators[i]){
								duplicate = true;
							}
						}
						if(duplicate != true){
							//gs.addInfoMessage("User added to list.");
							allEvaluators.push(UCEval[c]+'');
						}
					}
				}
			}
			//gs.addInfoMessage("Users after Use Case: " +allEvaluators.length);

			//lookup solutions primary contacts and add to all users array if not duplicate
			var grSol = new GlideRecord('x_inthe_eval_solution');
			grSol.addQuery('evaluation',current.sys_id);
			grSol.query();
			//gs.addInfoMessage("Solutions count is: "+grSol.getRowCount());
			if(grSol.getRowCount()>0){
				while(grSol.next()){
					if(grSol.primary_contact !=''){
						solPC.push(grSol.primary_contact.sys_id);
					}
				}
				for(d=0;d<solPC.length;d++){
					var duplicate = '';
					for(i=0;i<allEvaluators.length;i++){
						if(solPC[d]==allEvaluators[i]){
							duplicate = true;
						}
					}
					if(duplicate !=true){
						allEvaluators.push(solPC[d]);
					}
				}
			}
			else if (grSol.getRowCount()==0){
				gs.addErrorMessage("No Solutions have been created. Please create a solution before continuing.");
			}

			//gs.addInfoMessage("Total unique evaluators count is: "+allEvaluators.length);
			//gs.addInfoMessage("Additional count is: "+addEvaluators.length);
			//gs.addInfoMessage("Use Case Leaders count is: "+UCLeaders.length);
			//gs.addInfoMessage("Use Case Evaluators count is: "+UCEval.length);
			//gs.addInfoMessage("Solutions PC count is: "+solPC.length);
			current.evaluators = allEvaluators.toString();
			current.state = 'final';
			current.update();
		}
		else if (solCount == 0){
			gs.addErrorMessage("There are no Solutions created for this Evaluation. Please create a solution before continuing.");
			action.setRedirectURL('x_inthe_eval_evaluation.do?sys_id='+current.sys_id);
		}
	}

}
else if(ucCount==0 || CriterionCount ==0){
	gs.addErrorMessage("Please create at least 1 use case and 1 criterion before finalizing.");
	action.setRedirectURL('x_inthe_eval_evaluation.do?sys_id='+current.sys_id);
}
action.setRedirectURL('x_inthe_eval_evaluation.do?sys_id='+current.sys_id);
action.setReturnURL(current);]]></script>
        <show_insert>false</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>awyoung</sys_created_by>
        <sys_created_on>2017-08-21 19:02:56</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>88639b104ff08f00f5f3d49f0310c730</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>Finalize Evaluation</sys_name>
        <sys_overrides/>
        <sys_package display_value="Solution Evaluation Tool" source="x_inthe_eval">a1a219604f27f640af76d0af0310c7c7</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Solution Evaluation Tool">a1a219604f27f640af76d0af0310c7c7</sys_scope>
        <sys_update_name>sys_ui_action_88639b104ff08f00f5f3d49f0310c730</sys_update_name>
        <sys_updated_by>awyoung</sys_updated_by>
        <sys_updated_on>2017-08-21 19:26:07</sys_updated_on>
        <table>x_inthe_eval_evaluation</table>
        <ui11_compatible>true</ui11_compatible>
        <ui16_compatible>true</ui16_compatible>
    </sys_ui_action>
</record_update>
